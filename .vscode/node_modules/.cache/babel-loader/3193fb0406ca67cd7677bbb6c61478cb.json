{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teres\\\\Desktop\\\\RastroIO\\\\src\\\\hooks\\\\packages.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useCallback, useContext } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport usePersistedState from './usePersistedState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PackagesContext = /*#__PURE__*/createContext({});\n\nconst PackagesProvider = ({\n  children\n}) => {\n  _s();\n\n  const [packages, setPackages] = usePersistedState('@RastroIO:packages', {\n    tracking: [],\n    delivered: [],\n    archived: []\n  });\n  const create = useCallback(({\n    title,\n    code\n  }) => {\n    setPackages(prev => ({ ...prev,\n      tracking: [...prev.tracking, {\n        id: uuid(),\n        title,\n        code,\n        updated_at: new Date().toISOString(),\n        hasUpdate: false,\n        events: []\n      }]\n    }));\n  }, [setPackages]);\n  const drop = useCallback(id => {\n    setPackages(prev => {\n      const fromKey = Object.keys(prev).find(key => {\n        const findIndex = prev[key].findIndex(packageData => packageData.id === id);\n\n        if (findIndex !== -1) {\n          return true;\n        }\n\n        return false;\n      });\n\n      if (fromKey) {\n        const updatedPackages = prev[fromKey].filter(packageData => packageData.id !== id);\n        return { ...prev,\n          [fromKey]: updatedPackages\n        };\n      }\n\n      return prev;\n    });\n  }, [setPackages]);\n  const findById = useCallback(id => {\n    let result;\n    setPackages(prev => {\n      const {\n        tracking,\n        delivered,\n        archived\n      } = prev;\n      const trackingIndex = tracking.findIndex(item => item.id === id);\n\n      if (trackingIndex > -1) {\n        result = tracking[trackingIndex];\n        return prev;\n      }\n\n      const deliveredIndex = delivered.findIndex(item => item.id === id);\n\n      if (deliveredIndex > -1) {\n        result = delivered[deliveredIndex];\n        return prev;\n      }\n\n      const archivedIndex = archived.findIndex(item => item.id === id);\n\n      if (archivedIndex > -1) {\n        result = archived[archivedIndex];\n        return prev;\n      }\n\n      return prev;\n    });\n    return result;\n  }, [setPackages]);\n  const update = useCallback(data => {\n    setPackages(prev => {\n      const {\n        tracking,\n        delivered\n      } = prev;\n      const trackingIndex = tracking.findIndex(item => item.id === data.id);\n\n      if (trackingIndex > -1) {\n        const trackingPackages = [...tracking];\n        trackingPackages[trackingIndex] = data;\n        return { ...prev,\n          tracking: trackingPackages\n        };\n      }\n\n      const deliveredIndex = delivered.findIndex(item => item.id === data.id);\n\n      if (deliveredIndex > -1) {\n        const deliveredPackages = [...delivered];\n        deliveredPackages[deliveredIndex] = data;\n        return { ...prev,\n          delivered: deliveredPackages\n        };\n      }\n\n      return prev;\n    });\n    return data;\n  }, [setPackages]);\n  const moveTo = useCallback((id, to) => {\n    setPackages(prev => {\n      let fromPackageIndex;\n      const fromKey = Object.keys(prev).find(key => {\n        const findIndex = prev[key].findIndex(packageData => packageData.id === id);\n\n        if (findIndex !== -1) {\n          fromPackageIndex = findIndex;\n          return true;\n        }\n\n        return false;\n      });\n      const updatedFromPackages = prev[fromKey].filter(item => item.id !== id);\n\n      if (fromKey === to) {\n        return prev;\n      }\n\n      if (fromPackageIndex !== undefined && fromPackageIndex > -1) {\n        const packageToInsert = prev[fromKey][fromPackageIndex];\n        return { ...prev,\n          [to]: [...prev[to], packageToInsert],\n          [fromKey]: updatedFromPackages\n        };\n      }\n\n      return prev;\n    });\n  }, [setPackages]);\n  const getPackageKey = useCallback(id => {\n    let result;\n    setPackages(prev => {\n      Object.keys(prev).find(key => {\n        const findIndex = prev[key].findIndex(packageData => packageData.id === id);\n\n        if (findIndex !== -1) {\n          result = key;\n          return true;\n        }\n\n        return false;\n      });\n      return prev;\n    });\n    return result;\n  }, [setPackages]);\n  return /*#__PURE__*/_jsxDEV(PackagesContext.Provider, {\n    value: {\n      create,\n      packages,\n      drop,\n      findById,\n      update,\n      moveTo,\n      getPackageKey\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PackagesProvider, \"m7QYyI0qEkHhuE+nFOSsEm1Rsuo=\", false, function () {\n  return [usePersistedState];\n});\n\n_c = PackagesProvider;\nexport default PackagesProvider;\nexport function usePackages() {\n  _s2();\n\n  const context = useContext(PackagesContext);\n\n  if (!context) {\n    throw new Error('You can use this hook just inside PackagesProvider');\n  }\n\n  return context;\n}\n\n_s2(usePackages, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"PackagesProvider\");","map":{"version":3,"sources":["C:/Users/teres/Desktop/RastroIO/src/hooks/packages.tsx"],"names":["React","createContext","useCallback","useContext","v4","uuid","usePersistedState","PackagesContext","PackagesProvider","children","packages","setPackages","tracking","delivered","archived","create","title","code","prev","id","updated_at","Date","toISOString","hasUpdate","events","drop","fromKey","Object","keys","find","key","findIndex","packageData","updatedPackages","filter","findById","result","trackingIndex","item","deliveredIndex","archivedIndex","update","data","trackingPackages","deliveredPackages","moveTo","to","fromPackageIndex","updatedFromPackages","undefined","packageToInsert","getPackageKey","usePackages","context","Error"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useContext } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport ICreatePackageDTO from '../dtos/ICreatePackageDTO';\r\nimport usePersistedState from './usePersistedState';\r\n\r\ninterface TrackEvent {\r\n  data: string;\r\n  hora: string;\r\n  descricao: string;\r\n  criacao: string;\r\n  unidade: {\r\n    tipounidade: string;\r\n    cidade: string;\r\n    uf: string;\r\n  };\r\n}\r\n\r\ninterface IPackage {\r\n  id: string;\r\n  title: string;\r\n  code: string;\r\n  events: TrackEvent[];\r\n  updated_at: string;\r\n  hasUpdate: boolean;\r\n}\r\n\r\ninterface IPackages {\r\n  tracking: IPackage[];\r\n  archived: IPackage[];\r\n  delivered: IPackage[];\r\n}\r\n\r\ninterface PackagesContextData {\r\n  create(data: ICreatePackageDTO): void;\r\n  drop(id: string): void;\r\n  findById(id: string): IPackage | undefined;\r\n  update(data: IPackage): IPackage;\r\n  moveTo(id: string, to: 'tracking' | 'delivered' | 'archived'): void;\r\n  getPackageKey(id: string): keyof IPackages | undefined;\r\n  packages: IPackages;\r\n}\r\n\r\nconst PackagesContext = createContext<PackagesContextData>(\r\n  {} as PackagesContextData,\r\n);\r\n\r\nconst PackagesProvider: React.FC = ({ children }) => {\r\n  const [packages, setPackages] = usePersistedState<IPackages>(\r\n    '@RastroIO:packages',\r\n    {\r\n      tracking: [],\r\n      delivered: [],\r\n      archived: [],\r\n    },\r\n  );\r\n\r\n  const create = useCallback(\r\n    ({ title, code }: ICreatePackageDTO) => {\r\n      setPackages(prev => ({\r\n        ...prev,\r\n        tracking: [\r\n          ...prev.tracking,\r\n          {\r\n            id: uuid(),\r\n            title,\r\n            code,\r\n            updated_at: new Date().toISOString(),\r\n            hasUpdate: false,\r\n            events: [],\r\n          },\r\n        ],\r\n      }));\r\n    },\r\n    [setPackages],\r\n  );\r\n\r\n  const drop = useCallback(\r\n    (id: string): void => {\r\n      setPackages(prev => {\r\n        const fromKey = Object.keys(prev).find(key => {\r\n          const findIndex = prev[key as keyof IPackages].findIndex(\r\n            packageData => packageData.id === id,\r\n          );\r\n\r\n          if (findIndex !== -1) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }) as keyof IPackages;\r\n\r\n        if (fromKey) {\r\n          const updatedPackages = prev[fromKey].filter(\r\n            packageData => packageData.id !== id,\r\n          );\r\n\r\n          return {\r\n            ...prev,\r\n            [fromKey]: updatedPackages,\r\n          };\r\n        }\r\n\r\n        return prev;\r\n      });\r\n    },\r\n    [setPackages],\r\n  );\r\n\r\n  const findById = useCallback(\r\n    (id: string): IPackage | undefined => {\r\n      let result: IPackage | undefined;\r\n\r\n      setPackages(prev => {\r\n        const { tracking, delivered, archived } = prev;\r\n\r\n        const trackingIndex = tracking.findIndex(item => item.id === id);\r\n\r\n        if (trackingIndex > -1) {\r\n          result = tracking[trackingIndex];\r\n          return prev;\r\n        }\r\n\r\n        const deliveredIndex = delivered.findIndex(item => item.id === id);\r\n\r\n        if (deliveredIndex > -1) {\r\n          result = delivered[deliveredIndex];\r\n          return prev;\r\n        }\r\n\r\n        const archivedIndex = archived.findIndex(item => item.id === id);\r\n\r\n        if (archivedIndex > -1) {\r\n          result = archived[archivedIndex];\r\n          return prev;\r\n        }\r\n\r\n        return prev;\r\n      });\r\n\r\n      return result;\r\n    },\r\n    [setPackages],\r\n  );\r\n\r\n  const update = useCallback(\r\n    (data: IPackage): IPackage => {\r\n      setPackages(prev => {\r\n        const { tracking, delivered } = prev;\r\n\r\n        const trackingIndex = tracking.findIndex(item => item.id === data.id);\r\n\r\n        if (trackingIndex > -1) {\r\n          const trackingPackages = [...tracking];\r\n          trackingPackages[trackingIndex] = data;\r\n\r\n          return {\r\n            ...prev,\r\n            tracking: trackingPackages,\r\n          };\r\n        }\r\n\r\n        const deliveredIndex = delivered.findIndex(item => item.id === data.id);\r\n\r\n        if (deliveredIndex > -1) {\r\n          const deliveredPackages = [...delivered];\r\n          deliveredPackages[deliveredIndex] = data;\r\n\r\n          return {\r\n            ...prev,\r\n            delivered: deliveredPackages,\r\n          };\r\n        }\r\n\r\n        return prev;\r\n      });\r\n      return data;\r\n    },\r\n    [setPackages],\r\n  );\r\n  const moveTo = useCallback(\r\n    (id: string, to: 'tracking' | 'delivered' | 'archived') => {\r\n      setPackages(prev => {\r\n        let fromPackageIndex: number | undefined;\r\n\r\n        const fromKey = Object.keys(prev).find(key => {\r\n          const findIndex = prev[key as keyof IPackages].findIndex(\r\n            packageData => packageData.id === id,\r\n          );\r\n\r\n          if (findIndex !== -1) {\r\n            fromPackageIndex = findIndex;\r\n            return true;\r\n          }\r\n          return false;\r\n        }) as keyof IPackages;\r\n\r\n        const updatedFromPackages = prev[fromKey].filter(\r\n          item => item.id !== id,\r\n        );\r\n\r\n        if (fromKey === to) {\r\n          return prev;\r\n        }\r\n\r\n        if (fromPackageIndex !== undefined && fromPackageIndex > -1) {\r\n          const packageToInsert = prev[fromKey][fromPackageIndex];\r\n\r\n          return {\r\n            ...prev,\r\n            [to]: [...prev[to], packageToInsert],\r\n            [fromKey]: updatedFromPackages,\r\n          };\r\n        }\r\n        return prev;\r\n      });\r\n    },\r\n    [setPackages],\r\n  );\r\n\r\n  const getPackageKey = useCallback(\r\n    (id: string) => {\r\n      let result: keyof IPackages | undefined;\r\n\r\n      setPackages(prev => {\r\n        Object.keys(prev).find(key => {\r\n          const findIndex = prev[key as keyof IPackages].findIndex(\r\n            packageData => packageData.id === id,\r\n          );\r\n\r\n          if (findIndex !== -1) {\r\n            result = key as keyof IPackages;\r\n            return true;\r\n          }\r\n          return false;\r\n        }) as keyof IPackages;\r\n\r\n        return prev;\r\n      });\r\n\r\n      return result;\r\n    },\r\n    [setPackages],\r\n  );\r\n  return (\r\n    <PackagesContext.Provider\r\n      value={{\r\n        create,\r\n        packages,\r\n        drop,\r\n        findById,\r\n        update,\r\n        moveTo,\r\n        getPackageKey,\r\n      }}\r\n    >\r\n      {children}\r\n    </PackagesContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PackagesProvider;\r\n\r\nexport function usePackages() {\r\n  const context = useContext(PackagesContext);\r\n\r\n  if (!context) {\r\n    throw new Error('You can use this hook just inside PackagesProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}